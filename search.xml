<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ZooKeeper</title>
      <link href="/2018/05/13/zookeeper/"/>
      <url>/2018/05/13/zookeeper/</url>
      <content type="html"><![CDATA[<h1 id="Inside-ZooKeeper"><a href="#Inside-ZooKeeper" class="headerlink" title="Inside ZooKeeper"></a>Inside ZooKeeper</h1><p>architecture</p><p>internal procedure</p><h1 id="Best-practice"><a href="#Best-practice" class="headerlink" title="Best practice"></a>Best practice</h1><ul><li>每个znode的最佳大小</li><li>并发读写性能是多少</li></ul><h1 id="Operation"><a href="#Operation" class="headerlink" title="Operation"></a>Operation</h1><p>quota分析和管理 <a href="http://zookeeper.apache.org/doc/current/zookeeperQuotas.html" target="_blank" rel="noopener">http://zookeeper.apache.org/doc/current/zookeeperQuotas.html</a><br><a href="http://zookeeper.apache.org/doc/current/zookeeperHierarchicalQuorums.html" target="_blank" rel="noopener">http://zookeeper.apache.org/doc/current/zookeeperHierarchicalQuorums.html</a><br><a href="http://zookeeper.apache.org/doc/current/index.html" target="_blank" rel="noopener">http://zookeeper.apache.org/doc/current/index.html</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>tcp</title>
      <link href="/2018/05/13/tcp/"/>
      <url>/2018/05/13/tcp/</url>
      <content type="html"><![CDATA[<h1 id="Tcp-keep-alive"><a href="#Tcp-keep-alive" class="headerlink" title="Tcp keep alive"></a>Tcp keep alive</h1><p>There are three configurable properties that determine how Keep-Alives work. On Linux they are1:</p><p><strong>tcp_keepalive_time</strong><br>    default 7200 seconds<br><strong>tcp_keepalive_probes</strong><br>    default 9<br><strong>tcp_keepalive_intvl</strong><br>    default 75 seconds</p><p>The process works like this:</p><ol><li>Client opens TCP connection</li><li>If the connection is silent for tcp_keepalive_time seconds, send a single empty ACK packet.1</li><li>Did the server respond with a corresponding ACK of its own?<br><strong>No</strong><br>Wait tcp_keepalive_intvl seconds, then send another ACK<br>Repeat until the number of ACK probes that have been sent equals tcp_keepalive_probes.<br>If no response has been received at this point, send a RST and terminate the connection.</li></ol><p><strong>Yes</strong>: Return to step 2</p><h1 id="How-to-configure-on-os-level"><a href="#How-to-configure-on-os-level" class="headerlink" title="How to configure on os level"></a>How to configure on os level</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w net.ipv4.tcp_keepalive_time=60</span><br><span class="line">sysctl -w net.ipv4.tcp_keepalive_intvl=20</span><br></pre></td></tr></table></figure><h1 id="TCP-heartbeat"><a href="#TCP-heartbeat" class="headerlink" title="TCP heartbeat"></a>TCP heartbeat</h1><p><strong>environment</strong>: QLB —&gt; Nginx API Gatewy —&gt; Upstream Server</p><p><strong>why</strong></p><ul><li>Checking for dead peers</li><li>Preventing disconnection due to network inactivity</li><li>reclaim network resource if connection is idle</li></ul><p>You will not get far with the built-in keep-alives of the TCP stack. That’s because the keep-alive interval cannot be tuned by your application, it is set by the OS, and the defaults are rather high (hours). This is not specific to Java.</p>]]></content>
      
      <categories>
          
          <category> jekyll update </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>system</title>
      <link href="/2018/05/13/system/"/>
      <url>/2018/05/13/system/</url>
      <content type="html"><![CDATA[<p>systemd units? system, scope, slice<br>Available systemd Unit Types?</p><h1 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h1><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/resource_management_guide/sec-Obtaining_Information_About_Control_Groups" target="_blank" rel="noopener">systemd-cgls</a></p><p>systemctl list-units</p><p>systemd-cgtop</p><p>systemd-cgls [subsys name]</p><p>systemctl daemon-reload // reload the systemd configuration</p><p>systemctl:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">System Commands:</span><br><span class="line">  is-system-running               Check whether system is fully running</span><br><span class="line">  default                         Enter system default mode</span><br><span class="line">  rescue                          Enter system rescue mode</span><br><span class="line">  emergency                       Enter system emergency mode</span><br><span class="line">  halt                            Shut down and halt the system</span><br><span class="line">  poweroff                        Shut down and power-off the system</span><br><span class="line">  reboot [ARG]                    Shut down and reboot the system</span><br><span class="line">  kexec                           Shut down and reboot the system with kexec</span><br><span class="line">  exit                            Request user instance exit</span><br><span class="line">  switch-root ROOT [INIT]         Change to a different root file system</span><br><span class="line">  suspend                         Suspend the system</span><br><span class="line">  hibernate                       Hibernate the system</span><br><span class="line">  hybrid-sleep                    Hibernate and suspend the system</span><br></pre></td></tr></table></figure></p><p>display the status of service managed by systemd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --type service --all</span><br></pre></td></tr></table></figure></p><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/resource_management_guide/chap-using_control_groups#sec-Creating_Cgroups" target="_blank" rel="noopener">run a command in specified cgroup</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemd-run --unit=name --scope --slice=slice_name command</span><br></pre></td></tr></table></figure></p><h1 id="systemd-amp-cgroup"><a href="#systemd-amp-cgroup" class="headerlink" title="systemd &amp; cgroup"></a>systemd &amp; cgroup</h1><h1 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h1><p><strong>about JoinControllers</strong>: modify it in /etc/systemd/system.conf won’t take effect if your os apply initrd<br><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/sec-verifying_the_initial_ram_disk_image" target="_blank" rel="noopener">solution</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dracut --force</span><br></pre></td></tr></table></figure></p><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><ol><li><p>how to start process at system startup by systemd<br><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-Managing_Services_with_systemd-Services#tabl-Managing_Services_with_systemd-Services-systemctl" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-Managing_Services_with_systemd-Services#tabl-Managing_Services_with_systemd-Services-systemctl</a><br><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-Managing_Services_with_systemd-Services#tabl-Managing_Services_with_systemd-Services-chkconfig" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-Managing_Services_with_systemd-Services#tabl-Managing_Services_with_systemd-Services-chkconfig</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable name.service</span><br><span class="line">systemctl disable name.service</span><br><span class="line"></span><br><span class="line">systemctl list-unit-files --type service</span><br><span class="line">systemctl list-dependencies --after</span><br><span class="line">systemctl list-dependencies --before</span><br></pre></td></tr></table></figure></li><li><p>what is target?</p></li></ol><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><blockquote><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/resource_management_guide/sec-default_cgroup_hierarchies" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/resource_management_guide/sec-default_cgroup_hierarchies</a></p></blockquote><blockquote><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/chap-Managing_Services_with_systemd#tabl-Managing_Services_with_systemd-Introduction-Units-Locations" target="_blank" rel="noopener">Systemd Unit Files Locations</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> jekyll update </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>python experience</title>
      <link href="/2018/05/13/python-note/"/>
      <url>/2018/05/13/python-note/</url>
      <content type="html"><![CDATA[<h1 id="When-to-use-package-level-member"><a href="#When-to-use-package-level-member" class="headerlink" title="When to use package level member?"></a>When to use package level member?</h1><pre><code>- most of the module is package public, the minority module is visible to other package</code></pre>]]></content>
      
      <categories>
          
          <category> jekyll update </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/2018/05/13/mongoengine_source_inside/"/>
      <url>/2018/05/13/mongoengine_source_inside/</url>
      <content type="html"><![CDATA[<hr><p>title:  “Mongoengine Source Inside”<br>categories: jekyll update</p><hr>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/13/hello-world/"/>
      <url>/2018/05/13/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Conponent Interaction in Coding</title>
      <link href="/2018/05/13/component-interactive/"/>
      <url>/2018/05/13/component-interactive/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> jekyll update </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Cgroups and Namespace</title>
      <link href="/2018/05/13/cgroups_and_namespace/"/>
      <url>/2018/05/13/cgroups_and_namespace/</url>
      <content type="html"><![CDATA[<h1 id="Cgroups"><a href="#Cgroups" class="headerlink" title="Cgroups"></a>Cgroups</h1><p>To put it simple, cgroups are a metering and limiting mechanism, they control<br>how much of a system resource (CPU, memory) you can use. On the other hand,<br>namespaces limit what you can see. Thanks to namespaces processes have their<br>own view of the system’s resources.</p><h2 id="Subsystem"><a href="#Subsystem" class="headerlink" title="Subsystem"></a>Subsystem</h2><p><em>hierarchy</em>: combination of subsystem. subsystem can only be part of single hierarchy</p><p><em>control group</em>: subdirectory of the hierarchy, it further limit the resource of its task other than the configuration of its parent group</p><h2 id="How-to-use-cgroup"><a href="#How-to-use-cgroup" class="headerlink" title="How to use cgroup?"></a>How to use cgroup?</h2><p><em>Command</em></p><ul><li><p>cgexec</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cgexec -g blkio:test1 dd if=file-abc of=/dev/null</span><br></pre></td></tr></table></figure></li><li><p>cgdelete subsystems:path</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">where:</span><br><span class="line">    subsystems is a comma‑separated list of subsystems.</span><br><span class="line">    path is the path to the cgroup relative to the root of the hierarchy.</span><br><span class="line"></span><br><span class="line">As i know, this command will echo msg like &apos;cgdelete: cannot remove group &apos;hubble-agent&apos;: No such file or directory&apos;, but it succeeds most of the time</span><br></pre></td></tr></table></figure></li><li><p>create a control group</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cgcreate -t uid:gid -a uid:gid -g controllers:path</span><br></pre></td></tr></table></figure></li></ul><p>controllers is not necessary to the subsystem combination</p><ul><li>lssubsys</li></ul><p>lscgroup</p><p>configuration</p><p>subsystem</p><h3 id="other"><a href="#other" class="headerlink" title="other"></a>other</h3><ol><li>/proc/<pid>/cgroup provides with list of hierarchy and corresponding control group that this process belongs to</pid></li></ol><h1 id="Namespace"><a href="#Namespace" class="headerlink" title="Namespace"></a>Namespace</h1><p>Network namespaces</p><hr><h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><p><strong>Tools</strong></p><ul><li>nsenter</li></ul><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><blockquote><p><a href="https://blogs.igalia.com/dpino/2016/04/10/network-namespaces/" target="_blank" rel="noopener">https://blogs.igalia.com/dpino/2016/04/10/network-namespaces/</a></p></blockquote><blockquote><p><a href="http://cizixs.com/2017/02/10/network-virtualization-network-namespace" target="_blank" rel="noopener">Network Namespace</a></p></blockquote><hr><h1 id="temporary-note-from-youdao"><a href="#temporary-note-from-youdao" class="headerlink" title="temporary note from youdao"></a>temporary note from youdao</h1><h2 id="terminlogy-in-cgroup"><a href="#terminlogy-in-cgroup" class="headerlink" title="terminlogy in cgroup:"></a>terminlogy in cgroup:</h2><pre><code>1. https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-relationships_between_subsystems_hierarchies_control_groups_and_tasks2. usage and toolshttps://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/resource_management_guide/sec-default_cgroup_hierarchies</code></pre><h3 id="hierarchy"><a href="#hierarchy" class="headerlink" title="hierarchy"></a>hierarchy</h3><h3 id="group"><a href="#group" class="headerlink" title="group"></a>group</h3><h3 id="subsystem"><a href="#subsystem" class="headerlink" title="subsystem"></a>subsystem</h3><h3 id="controllers"><a href="#controllers" class="headerlink" title="controllers"></a>controllers</h3><pre><code>Never use libcgropup tools to modify the default hierarchies mounted by systemd since it would lead to unexpected behavior. The libcgroup library will be removed in future versions of Red Hat Enterprise Linux. </code></pre><p>systemd  <a href="https://linuxaria.com/article/how-to-manage-processes-with-cgroup-on-systemd" target="_blank" rel="noopener">https://linuxaria.com/article/how-to-manage-processes-with-cgroup-on-systemd</a><br>    So Control Groups are two things: (A) a way to hierarchally group and label processes, and (B) a way to then apply resource limits to these groups. systemd only requires the former (A), and not the latter (B).</p><pre><code>systemctl kill auditd.service# systemctl kill -s SIGKILL auditd.service systemd-cgtop  for resource usage monitoring, 可以看看这个方法能否快速实现进程网络io的统计 systemd-cgls</code></pre><p>systemd + cgroup, i think it’s a good combination</p><p>cgroup:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Multiple separate hierarchies of cgroups are necessary because each hierarchy is attached to one or more subsystems.</span><br></pre></td></tr></table></figure></p><p>cmd to mount cgroup:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t cgroup -o cpuset,memory hier1 /sys/fs/cgroup/rg1</span><br></pre></td></tr></table></figure></p><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-relationships_between_subsystems_hierarchies_control_groups_and_tasks" target="_blank" rel="noopener">cgroup tutorial</a></p><h1 id="Terminlonogy"><a href="#Terminlonogy" class="headerlink" title="Terminlonogy"></a>Terminlonogy</h1><p>subsystem, cgroup, hierarchy and task ?</p><p>这个文章一定程度上暗示了什么是hierarchy: <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/ch-using_control_groups" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/ch-using_control_groups</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Note that multiple subsystems can be mounted to a single hierarchy, but each subsystem can be mounted only once.</span><br></pre></td></tr></table></figure></p><p><strong>Command</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">列出subsystem是否挂载，挂到哪个hierarchy上？</span><br><span class="line"># lssubsys -am</span><br><span class="line"></span><br><span class="line">Creating a mount entry，通过配置文件和命令的挂载方法？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">重新调整hierarchy所挂载的subsystem: 使用 -o remount,[subsystem combination]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stat: /proc/cgroups</span><br><span class="line"></span><br><span class="line">how to show all the hierarchy directory?  lssubsys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">怎样列出 sussystems 下的所有hierarchy目录？ lssubsys -am只能显示一个，是不是说多个目录最终都映射到同一个中？ 我测试了一下，应该使用类似软连接的技术，我同时将同一个subsystem combination挂载到多个hierarchy下，重新remount其中一个，都会影响所有hierarchy。 同时，这意味着将所有相关的hierarchy umount后才能将subsystem combination释放掉，即unmount其中一个不会影响其他。 向其中一个hierarchy加入group，会影响其他的hierarchy目录。 测试了那么多，归根到底，只要在hierarchy下创建了group，直到你cgdelete这个group为止，这个hierarchy都会存在，即是是umount hierarchy</span><br><span class="line"></span><br><span class="line">cgdelete并不会杀死group里面的task进程</span><br><span class="line"></span><br><span class="line">lssubsys  列出所有的hierarchy，默认情况下hierarchy名为subsystem名</span><br><span class="line">lssubsys -a 列出所有的subsystem</span><br><span class="line">lssubsys -am</span><br></pre></td></tr></table></figure></p><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/sec-relationships_between_subsystems_hierarchies_control_groups_and_tasks" target="_blank" rel="noopener">Rule</a></p><ol><li>subsystem特定的组合后，不能再切割或变成一个子组合。  这应该是rule 2</li></ol><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ol><li>研究systemd and cgroup，他们怎样组合一起使用？</li><li>umount <hierarchy>的副作用以及怎样解决？</hierarchy></li><li>/proc/mounts  headers解析，比如第一列是device name</li><li>当group还有task正在运行时， mount 和 mount -o remount[,xxx] 会报 <strong>mount: <hierarchy dir=""> is busy</hierarchy></strong>。 就算你umount了，由于group信息仍然残留在kernel中，<strong>lssubsys</strong> 和 <strong>lssubsys -a</strong>依然会显示这个subsystem combination，但是 <strong>lssubsys -am</strong>不会显示，因为没有mount point</li><li>if umounting hierarchy while there are still some running group, the hierarchy info skill exists in the kernel. You can not mount any subsystem within that hierarchy until you delete those group</li><li>[investigate systemd, its unit system and combination with cgroup] (<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/resource_management_guide/sec-modifying_control_groups" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/resource_management_guide/sec-modifying_control_groups</a>)</li></ol><p><a href="https://en.wikipedia.org/wiki/Systemd" target="_blank" rel="noopener">这个layer char不错</a></p><p>apply systemd config change:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># systemctl daemon-reload</span><br><span class="line"># systemctl restart example.service</span><br></pre></td></tr></table></figure></p><ol start="7"><li><a href="https://www.digitalocean.com/community/tutorials/how-to-limit-resources-using-cgroups-on-centos-6" target="_blank" rel="noopener">how to let cgroup mount all the subsystem on start up for centos 6.x</a></li></ol>]]></content>
      
      <categories>
          
          <category> jekyll update </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Big Data</title>
      <link href="/2018/05/13/big%20data/"/>
      <url>/2018/05/13/big%20data/</url>
      <content type="html"><![CDATA[<h1 id="一致性"><a href="#一致性" class="headerlink" title="一致性"></a>一致性</h1><p>2pc<br>3pc</p><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><h3 id="服务器如何应对故障，如何容错"><a href="#服务器如何应对故障，如何容错" class="headerlink" title="服务器如何应对故障，如何容错"></a>服务器如何应对故障，如何容错</h3><ul><li>zk, chubby</li><li>hdfs</li><li>hbase</li><li>redis</li></ul><h3 id="为什么要journal-node而不是ZK，是不是数据量太大？"><a href="#为什么要journal-node而不是ZK，是不是数据量太大？" class="headerlink" title="为什么要journal node而不是ZK，是不是数据量太大？"></a>为什么要journal node而不是ZK，是不是数据量太大？</h3><h3 id="Hadoop怎样基于ZK做主备切换的？要详细讲解一下方案，-比如主备之间怎样同步信息"><a href="#Hadoop怎样基于ZK做主备切换的？要详细讲解一下方案，-比如主备之间怎样同步信息" class="headerlink" title="Hadoop怎样基于ZK做主备切换的？要详细讲解一下方案， 比如主备之间怎样同步信息"></a>Hadoop怎样基于ZK做主备切换的？要详细讲解一下方案， 比如主备之间怎样同步信息</h3><h3 id="怎样的方式能更好地介绍系统，方便理解运行流程、请求处理路径、瓶颈、运维问题"><a href="#怎样的方式能更好地介绍系统，方便理解运行流程、请求处理路径、瓶颈、运维问题" class="headerlink" title="怎样的方式能更好地介绍系统，方便理解运行流程、请求处理路径、瓶颈、运维问题"></a>怎样的方式能更好地介绍系统，方便理解运行流程、请求处理路径、瓶颈、运维问题</h3><ul><li>各类、线程在时间的顺序上的关系？</li><li>各类各线程的职责以及相关的数据？</li><li>瓶颈： 哪些共同的锁？</li><li>每个处理路径上的相关指标？</li></ul><h3 id="锁的类型以及怎样处理竞争条件"><a href="#锁的类型以及怎样处理竞争条件" class="headerlink" title="锁的类型以及怎样处理竞争条件"></a>锁的类型以及怎样处理竞争条件</h3><ul><li>轻量级、重量级锁，乐观锁，自旋锁, 排他锁，读写锁</li><li>thread local</li><li>多副本来解决并发问题，这里好像有一个相关的协议的</li></ul>]]></content>
      
      <categories>
          
          <category> big data </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JVM G1 Investigation</title>
      <link href="/2018/05/13/G1/"/>
      <url>/2018/05/13/G1/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> jekyll update </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Ansible Investigation</title>
      <link href="/2018/05/13/2017-06-1-Ansible-Src-Inside/"/>
      <url>/2018/05/13/2017-06-1-Ansible-Src-Inside/</url>
      <content type="html"><![CDATA[<h1 id="Ansible-Source-Invetigation"><a href="#Ansible-Source-Invetigation" class="headerlink" title="Ansible Source Invetigation"></a>Ansible Source Invetigation</h1><h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><h2 id="Class-Structure"><a href="#Class-Structure" class="headerlink" title="Class Structure"></a>Class Structure</h2><p>InventoryManager<br>    —-&gt; InventoryData</p><p>InventoryData<br>    —-&gt; <em>Group<br>    —-&gt; </em>Host</p><h2 id="Ansible-Hack"><a href="#Ansible-Hack" class="headerlink" title="Ansible Hack"></a>Ansible Hack</h2><p>special host variables:</p><pre><code>- inventory_file- inventory_dir</code></pre><h2 id="Special-Inventory"><a href="#Special-Inventory" class="headerlink" title="Special Inventory"></a>Special Inventory</h2><p>group_vars/, host_vars and var plugin</p><h2 id="Pattern"><a href="#Pattern" class="headerlink" title="Pattern"></a>Pattern</h2><p>pattern is used in playbook after hosts field so as to select hosts satisfied the pattern</p><p>supportted pattern:</p><ul><li>raw</li><li>difference !</li><li>intersection &amp;</li><li>subscript such as DataNode[10], DataNode[1:10], DataNode[01:10]</li><li>regular expression</li><li>regular expression began with ~ will ignore subscript</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># select hosts that is NameNode and ZooKeeper but not HMaster</span><br><span class="line">- hosts: NameNode:!HMaster:&amp;ZooKeeper</span><br><span class="line"></span><br><span class="line"># select the first 10 DataNode</span><br><span class="line">- hosts: DataNode[10]</span><br></pre></td></tr></table></figure><h2 id="Playbook"><a href="#Playbook" class="headerlink" title="Playbook"></a>Playbook</h2><pre><code>- &apos;include&apos; is taggable and conditional</code></pre><h2 id="Coding-Skill"><a href="#Coding-Skill" class="headerlink" title="Coding Skill"></a>Coding Skill</h2><h3 id="Design-Skill"><a href="#Design-Skill" class="headerlink" title="Design Skill"></a>Design Skill</h3><pre><code>Include syntax is modeled by class PlaybookInclude. User can add condition, tags and vars to tasks andinclude statement, so It&apos;s reasonable to create super class Conditional and Taggable for PalybookInclude</code></pre><h2 id="Usage-Skill"><a href="#Usage-Skill" class="headerlink" title="Usage Skill"></a>Usage Skill</h2><h3 id="Play-descriptor"><a href="#Play-descriptor" class="headerlink" title="Play descriptor"></a>Play descriptor</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">_name                = FieldAttribute(isa=&apos;string&apos;, default=&apos;&apos;, always_post_validate=True)</span><br><span class="line"></span><br><span class="line"># TODO: generalize connection</span><br><span class="line">_accelerate          = FieldAttribute(isa=&apos;bool&apos;, default=False, always_post_validate=True)</span><br><span class="line">_accelerate_ipv6     = FieldAttribute(isa=&apos;bool&apos;, default=False, always_post_validate=True)</span><br><span class="line">_accelerate_port     = FieldAttribute(isa=&apos;int&apos;, default=5099, always_post_validate=True)</span><br><span class="line"></span><br><span class="line"># Connection</span><br><span class="line">_fact_path           = FieldAttribute(isa=&apos;string&apos;, default=None)</span><br><span class="line">_gather_facts        = FieldAttribute(isa=&apos;bool&apos;, default=None, always_post_validate=True)</span><br><span class="line">_gather_subset       = FieldAttribute(isa=&apos;barelist&apos;, default=None, always_post_validate=True)</span><br><span class="line">_gather_timeout      = FieldAttribute(isa=&apos;int&apos;, default=None, always_post_validate=True)</span><br><span class="line">_hosts               = FieldAttribute(isa=&apos;list&apos;, required=True, listof=string_types, always_post_validate=True)</span><br><span class="line"></span><br><span class="line"># Variable Attributes</span><br><span class="line">_vars_files          = FieldAttribute(isa=&apos;list&apos;, default=[], priority=99)</span><br><span class="line">_vars_prompt         = FieldAttribute(isa=&apos;list&apos;, default=[], always_post_validate=True)</span><br><span class="line">_vault_password      = FieldAttribute(isa=&apos;string&apos;, always_post_validate=True)</span><br><span class="line"></span><br><span class="line"># Role Attributes</span><br><span class="line">_roles               = FieldAttribute(isa=&apos;list&apos;, default=[], priority=90)</span><br><span class="line"></span><br><span class="line"># Block (Task) Lists Attributes</span><br><span class="line">_handlers            = FieldAttribute(isa=&apos;list&apos;, default=[])</span><br><span class="line">_pre_tasks           = FieldAttribute(isa=&apos;list&apos;, default=[])</span><br><span class="line">_post_tasks          = FieldAttribute(isa=&apos;list&apos;, default=[])</span><br><span class="line">_tasks               = FieldAttribute(isa=&apos;list&apos;, default=[])</span><br><span class="line"></span><br><span class="line"># Flag/Setting Attributes</span><br><span class="line">_force_handlers      = FieldAttribute(isa=&apos;bool&apos;, always_post_validate=True)</span><br><span class="line">_max_fail_percentage = FieldAttribute(isa=&apos;percent&apos;, always_post_validate=True)</span><br><span class="line">_serial              = FieldAttribute(isa=&apos;list&apos;, default=[], always_post_validate=True)</span><br><span class="line">strategy: String</span><br><span class="line">    linear: batch run</span><br><span class="line">    free: each host run as fast as it can</span><br><span class="line">_order               = FieldAttribute(isa=&apos;string&apos;, always_post_validate=True)</span><br></pre></td></tr></table></figure><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><ol><li>Is fact cached in Inventory?</li><li>How to add timeout to fact gathering?</li><li>How to discover and clean the dead worker?</li></ol>]]></content>
      
      <categories>
          
          <category> jekyll update </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Yarn FS</title>
      <link href="/2018/05/13/2017-03-27-Yarn-FS/"/>
      <url>/2018/05/13/2017-03-27-Yarn-FS/</url>
      <content type="html"><![CDATA[<h1 id="Preview"><a href="#Preview" class="headerlink" title="Preview"></a>Preview</h1><ul><li>the whole process to allocate, update and reclaim resource</li><li>mechanism from the view of lock and thread</li><li>FS Metric</li><li>performance limitation and what will cause this</li><li>the process of RM startup</li><li><strong>artifact:</strong> flow char to make everyone know the important detail of FS in terms of performance bottleneck, configuration&amp;metric&amp;log scope of influence, how does each sub component collaborate</li></ul><hr><h2 id="Fair-scheduler-inside"><a href="#Fair-scheduler-inside" class="headerlink" title="Fair scheduler inside"></a>Fair scheduler inside</h2><p><strong>done</strong> updateThread</p><p><strong>done</strong> updateCall</p><p><strong>done</strong> Preemption</p><p><strong>done</strong> Allocate</p><p><strong>done</strong> NMUpdate</p><p><strong>doing</strong> FS Algorithms and related configuration</p><p><strong>doing</strong> RM command</p><p>YARN HA &amp; Zookeeper<br>the class hierachy of FS<br>Yarn Preserve<br>Resource Preserved<br>Queue Structure and configuration<br>Policy, Priority, local&amp;rack local&amp;any<br>how to extract usful info form RM log? # make a flow char, introduce what kind of log will be generated on each flow point.<br>summarize the design pattern of RM and its class diagram<br>introcude how to inplement a state machine in Java&amp;Python, how state machine takes greate effect in YARN?<br>introcude java concurrent knowledge, lock level, class and example, performance, use case.(inspired by different type of lock usage in RM)<br>timeline server in YARN?<br>introduce DRF</p><h3 id="The-process-of-allcating-container-for-AM"><a href="#The-process-of-allcating-container-for-AM" class="headerlink" title="The process of allcating container for AM"></a>The process of allcating container for AM</h3><p><strong>ResourceRequest:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">priority</span><br><span class="line">resourceName</span><br><span class="line">capacity</span><br><span class="line">numContainers # decrease by 1 everytime this request is satisfied on allocation, if it reaches 0, the request will be removed</span><br><span class="line">relaxLocality: Boolean</span><br></pre></td></tr></table></figure></p><p>Every allocateRequest and Response has a monotone increasing number to ensure its correctness.</p><ol><li>FS.releaseContainers(List<containerid>, SchedulerApplicationAttempt)<ul><li>FS.completedContainer() in a for loop</li></ul></containerid></li><li>lock(FSAppAttempt, current application)<ul><li>upsert request in FSAppAttempt.appSchedulingInfo<blockquote><p>app has lots of priorities, each priority has requests for different type of resource, each request has a numer of containers</p></blockquote></li><li>FSAppAttempt.updateBlackList</li><li>FSAppAttempt.pullNewlyAllocatedContainersAndNMTokens() # it means containers are allocated asynchronously.</li></ul></li></ol><h4 id="Related-Configuration-I-assume"><a href="#Related-Configuration-I-assume" class="headerlink" title="Related Configuration(I assume):"></a>Related Configuration(I assume):</h4><ol><li>AM update interval</li></ol><hr><h3 id="How-amp-When-to-release-container"><a href="#How-amp-When-to-release-container" class="headerlink" title="How&amp;When to release container?"></a>How&amp;When to release container?</h3><p><strong>entrance:</strong> (FS.lock) FS.completedContainer(RMContainer, ContainerStatus, RMContainerEventType) # unreserve or release container</p><ol><li>FSAppAttempt.containerCompleted()<ul><li>remove from list of newly allocated containers</li><li>send event to StateMachine to update the container state</li><li>remove from list of containers</li><li>update queue resource; update app resource consumption</li><li>remove the container from preemption cache</li></ul></li><li>remove container from SchedulerNode and add its available resource</li><li>update root queue resource.(subqueue metrics might be a little out of date until the update interval)</li></ol><h2 id="The-process-of-NodeUpdate"><a href="#The-process-of-NodeUpdate" class="headerlink" title="The process of NodeUpdate"></a>The process of NodeUpdate</h2><p>// node resource is updated only on node registration<br>// what is NodeHeartbeatResponse.nextHeartbeatInterval?</p><p><strong>ResourceTracker.nodeHeartbeat(NodeHeartbeatRequest)</strong>:<br>Here is the node heartbeat sequence…</p><ol><li>Check if it’s a registered node</li><li>Check if it’s a valid (i.e. not excluded) node </li><li>Check if it’s a ‘fresh’ heartbeat i.e. not duplicate heartbeat </li><li>Send healthStatus to RMNode, update containers info of RMNode<br>//update response: (RMNode.writeLock.lock()) remove container,application from NM</li><li>dispatch the NodeHeartbeatRequest to update the container status<br> [E]STATUS_UPDATE –&gt; RMNodeImpl –&gt; [E]NODE_UPDATE –&gt; (FS.lock )FS.nodeUpdate(RMNode)</li><li>FS.nodeUpdate()<ul><li>update the information of newly launched containers in AppAttempt</li><li>completedContainer</li><li></li></ul></li></ol><p>//TODO: will the nodeHeartbeat finish until the end of FS.nodeUpdate? Is dispatch sync or async?</p><p>// TODO: hightlight the content of NMResponse to show what the NM will do</p><h2 id="FS-Algorithms-and-related-configuration"><a href="#FS-Algorithms-and-related-configuration" class="headerlink" title="FS Algorithms and related configuration"></a>FS Algorithms and related configuration</h2><ol><li>FS.nodeUpdate</li><li>FS.continuousScheduling</li></ol><p>core: FSParentQueue.assignContainer(FSSchedulerNode)</p><pre><code>1. </code></pre><p>// if FSSchedulerNode.getReservedContainer!=null, this node doesn’t participate the assignment.<br>ParentQueue.assignContainer –&gt; LeafQueue.assignContainer –&gt; FSApp.assignContainer # depth first search based on priority</p><h2 id="The-RM-command"><a href="#The-RM-command" class="headerlink" title="The RM command"></a>The RM command</h2><p>NodeAction.SHUTDOWN</p><ul><li>nodeManager version is not invalid</li><li>node not in hostsList or in excludeList # I find it ok for both hostname and ip</li><li>node doesn’t has enough minimum allocation resource<br>NodeAction.NORMAL</li></ul><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ol><li>what is the AM Command?</li><li>what is reserved container &amp; resource? How is it treated differently? # one node can only reserve one container; one app can reserve multiple containers for on different node for different priority; a node’s reserved container can be overridden by that of a more precedent app</li><li>what is pending resource in AppSchedulingInfo?</li><li>why to deactivate the application? activeUsersManager.deactivateApplication(user, applicationId)</li><li>what is unmanged am?</li><li>what is content in blackList of FSAppAttempt?</li><li>what is the importance of FSAppAttempt headroom which is updated on allocation?</li><li><p>what is clusterTimeStamp?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if (System.currentTimeMillis() - ResourceManager.getClusterTimeStamp()</span><br><span class="line">    &lt; nmExpireInterval) &#123;</span><br><span class="line">  LOG.info(containerId + &quot; doesn&apos;t exist. Add the container&quot;</span><br><span class="line">      + &quot; to the release request cache as it maybe on recovery.&quot;);</span><br><span class="line">  synchronized (attempt) &#123;</span><br><span class="line">    attempt.getPendingRelease().add(containerId);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>nodeLocality, rackLocality</p></li><li>summarize all the event between FS, NM and AM as well as how those events are handled</li><li><strong>important</strong> list all the resource name in FSAppAttempt, difference between request locality, LocalityThreshold? (vcore, memory? ANY, rackName, nodeName, off switch?) locality logic in FSApp.assignContainer?</li><li><p>configurationj tuning</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/** Whether to assign multiple containers in one check-in. */</span><br><span class="line">public static final String  ASSIGN_MULTIPLE = CONF_PREFIX + &quot;assignmultiple&quot;;</span><br><span class="line">protected static final boolean DEFAULT_ASSIGN_MULTIPLE = false;</span><br><span class="line"></span><br><span class="line">/** Whether to give more weight to apps requiring many resources. */</span><br><span class="line">protected static final String  SIZE_BASED_WEIGHT = CONF_PREFIX + &quot;sizebasedweight&quot;;</span><br><span class="line">protected static final boolean DEFAULT_SIZE_BASED_WEIGHT = false;</span><br><span class="line"></span><br><span class="line">/** Maximum number of containers to assign on each check-in. */</span><br><span class="line">protected static final String MAX_ASSIGN = CONF_PREFIX + &quot;max.assign&quot;;</span><br><span class="line">protected static final int DEFAULT_MAX_ASSIGN = -1;</span><br><span class="line"></span><br><span class="line">/** The update interval for calculating resources in FairScheduler .*/</span><br><span class="line">public static final String UPDATE_INTERVAL_MS =</span><br><span class="line">    CONF_PREFIX + &quot;update-interval-ms&quot;;</span><br><span class="line">public static final int DEFAULT_UPDATE_INTERVAL_MS = 500;</span><br></pre></td></tr></table></figure></li><li><p>what is applicableDepth and how to change it?</p></li><li>if assignContainerPreCheck(node) in FSLeafQueue.assignContainer is necessary ? this has been checked in the previous step</li><li>how to determine the minShare, fairShare and weight of FSApp?</li><li>replace the compairison method with the heap sort in FS?</li><li>unmanagedAM is the AM runs on independent mode.</li><li>what is the essential meaning of fairness, the chance of being scheduled? I find that some app use more resource than others, because of weight or usage based weight? will the resource of the lower weight app be preempted by a higher weight app of the same queue?</li><li>what is the initial fair share of app?</li></ol>]]></content>
      
      <categories>
          
          <category> jekyll update </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Quick Overlook of Mongodb</title>
      <link href="/2018/05/07/mongo/"/>
      <url>/2018/05/07/mongo/</url>
      <content type="html"><![CDATA[<h1 id="Table-of-Content"><a href="#Table-of-Content" class="headerlink" title="Table of Content"></a>Table of Content</h1><ul><li>Overview</li><li>Data model and pattern</li><li>Performance</li><li>Example/Frequently used function</li></ul><hr><h1 id="Data-Model"><a href="#Data-Model" class="headerlink" title="Data Model"></a>Data Model</h1><h2 id="Document-Relationship-Between-Documents"><a href="#Document-Relationship-Between-Documents" class="headerlink" title="Document Relationship Between Documents"></a>Document Relationship Between Documents</h2><p>Document relationship includes:</p><ul><li><strong>one-to-one</strong></li><li><strong>one-to-many</strong></li></ul><p>Relationship are maintained with:</p><ul><li><strong>document references</strong></li><li><strong>embedded documents</strong></li></ul><table><thead><tr><th>&lt;/&gt;</th><th>Advantage</th><th>Disadvantage</th></tr></thead><tbody><tr><td>embedded documents</td><td>benefit from data localization</td><td>introduction large document problem and trigger space relocation if document is too large especially using an embedded array <a href="https://docs.mongodb.com/manual/core/data-model-operations/#data-model-document-growth" target="_blank" rel="noopener">MMAPv1</a></td></tr><tr><td>document references</td><td>a. avoid document repetition<br> b. reduce single document size</td><td>need to issue multiple query to refer to other docuement</td></tr></tbody></table><h3 id="One-to-One-Relationships"><a href="#One-to-One-Relationships" class="headerlink" title="One-to-One Relationships"></a>One-to-One Relationships</h3><figure class="highlight"><figcaption><span>With Referencing</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// patron document</span><br><span class="line">&#123;</span><br><span class="line">   _id: "joe",</span><br><span class="line">   name: "Joe Bookreader"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// address document</span><br><span class="line">&#123;</span><br><span class="line">   patron_id: "joe",</span><br><span class="line">   street: "123 Fake Street",</span><br><span class="line">   city: "Faketon",</span><br><span class="line">   state: "MA",</span><br><span class="line">   zip: "12345"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Apply embedded document If the address data is frequently retrieved with the name information,<br>which is known as data localization:</p><figure class="highlight"><figcaption><span>With Embedded Document</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  _id: "joe",</span><br><span class="line">  name: "Joe Bookreader",</span><br><span class="line">  address: &#123;</span><br><span class="line">    street: "123 Fake Street",</span><br><span class="line">    city: "Faketon",</span><br><span class="line">    state: "MA",</span><br><span class="line">    zip: "12345"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="One-to-Many-Relationships"><a href="#One-to-Many-Relationships" class="headerlink" title="One-to-Many Relationships"></a>One-to-Many Relationships</h3><p>Use <strong>embedded document</strong> when the <strong>patron</strong> has multiple <strong>address</strong> entities:</p><figure class="highlight"><figcaption><span>With Embedded Document</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  _id: "joe",</span><br><span class="line">  name: "Joe Bookreader",</span><br><span class="line">  addresses: [</span><br><span class="line">    &#123;</span><br><span class="line">      street: "123 Fake Street",</span><br><span class="line">      city: "Faketon",</span><br><span class="line">      state: "MA",</span><br><span class="line">      zip: "12345"</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      street: "1 Some Other Street",</span><br><span class="line">      city: "Boston",</span><br><span class="line">      state: "MA",</span><br><span class="line">      zip: "12345"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Referencing</strong> over embedding to <strong>avoid repetition</strong> in this example that maps<br>publisher and book relationships. Storing the books reference <strong>inside an array</strong><br>of publisher <strong>if number of books per publisher is small with limited growth</strong>: </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// Publisher document</span><br><span class="line">&#123;</span><br><span class="line">  name: "O'Reilly Media",</span><br><span class="line">  founded: 1980,</span><br><span class="line">  location: "CA",</span><br><span class="line">  books: [123456789, 234567890, ...]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Book document</span><br><span class="line">&#123;</span><br><span class="line">    _id: 123456789,</span><br><span class="line">    title: "MongoDB: The Definitive Guide",</span><br><span class="line">    author: [ "Kristina Chodorow", "Mike Dirolf" ],</span><br><span class="line">    published_date: ISODate("2010-09-24"),</span><br><span class="line">    pages: 216,</span><br><span class="line">    language: "English"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Book document</span><br><span class="line">&#123;</span><br><span class="line">   _id: 234567890,</span><br><span class="line">   title: "50 Tips and Tricks for MongoDB Developer",</span><br><span class="line">   author: "Kristina Chodorow",</span><br><span class="line">   published_date: ISODate("2011-05-06"),</span><br><span class="line">   pages: 68,</span><br><span class="line">   language: "English"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>To <strong>avoid mutable, growing arrays</strong>, store the publisher reference inside the book document:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// Publisher document</span><br><span class="line">&#123;</span><br><span class="line">   _id: "oreilly",</span><br><span class="line">   name: "O'Reilly Media",</span><br><span class="line">   founded: 1980,</span><br><span class="line">   location: "CA"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Book document</span><br><span class="line">&#123;</span><br><span class="line">   _id: 123456789,</span><br><span class="line">   title: "MongoDB: The Definitive Guide",</span><br><span class="line">   author: [ "Kristina Chodorow", "Mike Dirolf" ],</span><br><span class="line">   published_date: ISODate("2010-09-24"),</span><br><span class="line">   pages: 216,</span><br><span class="line">   language: "English",</span><br><span class="line">   publisher_id: "oreilly"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Book document</span><br><span class="line">&#123;</span><br><span class="line">   _id: 234567890,</span><br><span class="line">   title: "50 Tips and Tricks for MongoDB Developer",</span><br><span class="line">   author: "Kristina Chodorow",</span><br><span class="line">   published_date: ISODate("2011-05-06"),</span><br><span class="line">   pages: 68,</span><br><span class="line">   language: "English",</span><br><span class="line">   publisher_id: "oreilly"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Model-specific-application-context"><a href="#Model-specific-application-context" class="headerlink" title="Model specific application context"></a>Model specific application context</h2><ul><li>Model Data to Support Keyword Search by adding key word to an array:</li><li>Model Data for Atomic Operations</li></ul><h3 id="Model-Data-to-Support-Keyword-Search-by-adding-key-word-to-an-array"><a href="#Model-Data-to-Support-Keyword-Search-by-adding-key-word-to-an-array" class="headerlink" title="Model Data to Support Keyword Search by adding key word to an array:"></a>Model Data to Support Keyword Search by adding key word to an array:</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123; title : "Moby-Dick" ,</span><br><span class="line">  author : "Herman Melville" ,</span><br><span class="line">  published : 1851 ,</span><br><span class="line">  ISBN : 0451526996 ,</span><br><span class="line">  topics : [ "whaling" , "allegory" , "revenge" , "American" ,</span><br><span class="line">    "novel" , "nautical" , "voyage" , "Cape Cod"</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Create an index on the topics array:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.volumes.createIndex( &#123; <span class="attr">topics</span>: <span class="number">1</span> &#125; )</span><br></pre></td></tr></table></figure><p>Query based on the key word:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.volumes.findOne( &#123; <span class="attr">topics</span> : <span class="string">"voyage"</span> &#125;, &#123; <span class="attr">title</span>: <span class="number">1</span> &#125; )</span><br></pre></td></tr></table></figure><h3 id="Model-Data-for-Atomic-Operations"><a href="#Model-Data-for-Atomic-Operations" class="headerlink" title="Model Data for Atomic Operations"></a>Model Data for Atomic Operations</h3><p>Operation within a document is atomic. For fields that must be updated together, embedding the fields within the same document ensures that the fields can be updated atomically.</p><p>The available copies of the book and the checkout information should be in sync:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  _id: 123456789,</span><br><span class="line">  title: "MongoDB: The Definitive Guide",</span><br><span class="line">  author: [ "Kristina Chodorow", "Mike Dirolf" ],</span><br><span class="line">  published_date: ISODate("2010-09-24"),</span><br><span class="line">  pages: 216,</span><br><span class="line">  language: "English",</span><br><span class="line">  publisher_id: "oreilly",</span><br><span class="line">  available: 3,</span><br><span class="line">  checkout: [ &#123; by: "joe", date: ISODate("2012-10-15") &#125; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Update with new checkout information:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.books.update (</span><br><span class="line">   &#123; <span class="attr">_id</span>: <span class="number">123456789</span>, <span class="attr">available</span>: &#123; <span class="attr">$gt</span>: <span class="number">0</span> &#125; &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">     $inc: &#123; <span class="attr">available</span>: <span class="number">-1</span> &#125;,</span><br><span class="line">     $push: &#123; <span class="attr">checkout</span>: &#123; <span class="attr">by</span>: <span class="string">"abc"</span>, <span class="attr">date</span>: <span class="keyword">new</span> <span class="built_in">Date</span>() &#125; &#125;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><hr><h1 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h1><ul><li>query over reference, across collections?</li><li>index</li><li>shard</li></ul><h2 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h2><p>[TODO] b+,b-,lsm comparison</p><p>[TODO] penalty while creating index for large number of small index</p><p>Indexes can <strong>improve query efficiency</strong> in MongoDB. Without indexes, MongoDB must <strong>scan the whole collection</strong> to select those documents that match the query statement. </p><p>Index in MongoDB use a <strong>B-tree</strong> data structure.</p><p>By default, MongoDB creates a <strong>unique index</strong> on the _id field.</p><h3 id="Create-index"><a href="#Create-index" class="headerlink" title="Create index"></a>Create index</h3><figure class="highlight javascript"><figcaption><span>Mongo Shell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.createIndex( &lt;key and index type specification&gt;, &lt;options&gt; )</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><figcaption><span>Create a descending index on name field</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.createIndex( &#123; <span class="attr">name</span>: <span class="number">-1</span> &#125; )</span><br></pre></td></tr></table></figure><h3 id="Index-Types"><a href="#Index-Types" class="headerlink" title="Index Types"></a>Index Types</h3><h4 id="Single-Field"><a href="#Single-Field" class="headerlink" title="Single Field"></a>Single Field</h4><p><img src="https://docs.mongodb.com/manual/_images/index-ascending.bakedsvg.svg" alt="image"></p><figure class="highlight"><figcaption><span>Record</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_id"</span>: ObjectId(<span class="string">"570c04a4ad233577f97dc459"</span>),</span><br><span class="line">  <span class="attr">"score"</span>: <span class="number">1034</span>,</span><br><span class="line">  "location": &#123; state: "NY", city: "New York" &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><figcaption><span>creates an ascending index on the score field</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.createIndex( &#123; <span class="attr">name</span>: <span class="number">-1</span> &#125; )</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><figcaption><span>Create an Index on an Embedded Field</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.records.createIndex( &#123; <span class="string">"location.state"</span>: <span class="number">1</span> &#125; )</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><figcaption><span>Create an Index on Embedded Document</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.records.createIndex( &#123; <span class="attr">location</span>: <span class="number">1</span> &#125; )</span><br></pre></td></tr></table></figure><h4 id="Compound-Index"><a href="#Compound-Index" class="headerlink" title="Compound Index"></a>Compound Index</h4><p>MongoDB supports index on multiple field. For example, { userid: 1, score: -1 }, the index sorts first by userid and then, within each userid value, sorts by score.</p><h4 id="Multikey-index"><a href="#Multikey-index" class="headerlink" title="Multikey index"></a>Multikey index</h4><p> If you index a field that holds an <strong>array value</strong>, MongoDB creates separate index entries for every element of the array.</p><p><img src="https://docs.mongodb.com/manual/_images/index-multikey.bakedsvg.svg" alt="image"></p><h4 id="Geospatial-Index"><a href="#Geospatial-Index" class="headerlink" title="Geospatial Index"></a>Geospatial Index</h4><p><a href="https://docs.mongodb.com/manual/core/geospatial-indexes/" target="_blank" rel="noopener">2d Index Internals</a></p><h4 id="Text-Indexes"><a href="#Text-Indexes" class="headerlink" title="Text Indexes"></a>Text Indexes</h4><p>MongoDB provides a text index type that supports searching for string content such as language, case sensitivity, etc</p><p><a href="https://docs.mongodb.com/manual/core/index-text/" target="_blank" rel="noopener">Text Indexes</a></p><h4 id="Hashed-Indexes"><a href="#Hashed-Indexes" class="headerlink" title="Hashed Indexes"></a>Hashed Indexes</h4><p>To support <a href="https://docs.mongodb.com/manual/core/hashed-sharding/#sharding-hashed-sharding" target="_blank" rel="noopener">hash based sharding</a>, MongoDB provides a <a href="https://docs.mongodb.com/manual/core/index-hashed/" target="_blank" rel="noopener">hashed index</a> type, which indexes the hash of the value of a field.</p><h3 id="Index-Properties"><a href="#Index-Properties" class="headerlink" title="Index Properties"></a>Index Properties</h3><p><a href="https://docs.mongodb.com/manual/core/index-unique/" target="_blank" rel="noopener">Unique Indexes</a>. A unique index ensures that the indexed fields do not store duplicate values.<br><figure class="highlight javascript"><figcaption><span>Create Index on multiple field</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">db.members.createIndex(</span><br><span class="line">  &#123;</span><br><span class="line">    groupNumber: <span class="number">1</span>,</span><br><span class="line">    lastname: <span class="number">1</span>, <span class="attr">firstname</span>: <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    unique: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p><a href="https://docs.mongodb.com/manual/core/index-unique/" target="_blank" rel="noopener">Partial indexes</a>. Partial indexes only index the documents in a collection that meet a specified filter expression and it has <strong>lower storage requirements</strong> and <strong>reduced performance costs</strong> for index creation and maintenance<br><figure class="highlight javascript"><figcaption><span>Create partial index</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.restaurants.createIndex(</span><br><span class="line">   &#123; <span class="attr">cuisine</span>: <span class="number">1</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">partialFilterExpression</span>: &#123; <span class="attr">rating</span>: &#123; <span class="attr">$gt</span>: <span class="number">5</span> &#125; &#125; &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p><a href="https://docs.mongodb.com/manual/core/index-sparse/" target="_blank" rel="noopener">Sparse Indexes</a>. Sparse indexes only contain entries for documents that have the indexed field, even if the index field contains a null value.<br><figure class="highlight javascript"><figcaption><span>Create Sparse Index with Unique Constraint</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.scores.createIndex( &#123; <span class="attr">score</span>: <span class="number">1</span> &#125; , &#123; <span class="attr">sparse</span>: <span class="literal">true</span>, <span class="attr">unique</span>: <span class="literal">true</span> &#125; )</span><br></pre></td></tr></table></figure></p><p><a href="https://docs.mongodb.com/manual/core/index-ttl/" target="_blank" rel="noopener">TTL indexes</a>. MongoDB can use to automatically remove documents from a collection after a certain amount of time. data like Event data, logs, and session information only need to persist for a finite amount of time.</p><p>The _id field does not support TTL indexes.</p><figure class="highlight javascript"><figcaption><span>Create TTL Index</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.eventlog.createIndex( &#123; <span class="string">"lastModifiedDate"</span>: <span class="number">1</span> &#125;, &#123; <span class="attr">expireAfterSeconds</span>: <span class="number">3600</span> &#125; )</span><br></pre></td></tr></table></figure><p><a href="https://docs.mongodb.com/manual/reference/limits/#index-limitations" target="_blank" rel="noopener">Index Limitation</a></p><p>[TODO] index overhead, performance penalization ?</p><h2 id="Shard"><a href="#Shard" class="headerlink" title="Shard"></a>Shard</h2><p><a href="https://docs.mongodb.com/manual/reference/glossary/#term-chunk" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/glossary/#term-chunk</a></p><p><a href="https://docs.mongodb.com/manual/sharding/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/sharding/</a></p><p><a href="https://docs.mongodb.com/manual/core/sharding-shard-key/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/sharding-shard-key/</a></p><p>shard architecture?</p><p>chunks (default to 64MB) —&gt; shard </p><p>index and shard key</p><p>how to route data based on the shard key?</p><p>load balance and migration based on chunk</p><h3 id="mongodb-operation-amp-limitation"><a href="#mongodb-operation-amp-limitation" class="headerlink" title="mongodb operation &amp; limitation"></a>mongodb operation &amp; limitation</h3><blockquote><p><a href="https://docs.mongodb.com/manual/core/data-model-operations" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/data-model-operations</a></p></blockquote><blockquote><p><a href="https://docs.mongodb.com/manual/reference/limits/#Size-of-Namespace-File" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/limits/#Size-of-Namespace-File</a></p></blockquote><p>index size<br>namespace?</p><p>rolling up small document:</p><ul><li>involve sequential reads and fewer random disk accesses</li><li>smaller index?</li></ul><p><strong>Storage Optimization for Small Documents</strong><br>Each MongoDB document contains a certain amount of overhead. This overhead is normally insignificant but becomes significant if all documents are just a few bytes, as might be the case if the documents in your collection only have one or two fields.</p><ul><li>cutomize _id field</li><li>shorter field name</li><li><a href="https://docs.mongodb.com/manual/core/data-model-operations/#faq-developers-embed-documents" target="_blank" rel="noopener">embed document</a></li></ul><p><strong>data lifecycle management</strong></p><ul><li>TTL</li><li>capped collection, FIFO</li></ul><h2 id="Atomic-operation"><a href="#Atomic-operation" class="headerlink" title="Atomic operation"></a>Atomic operation</h2><blockquote><p><a href="https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity</a></p></blockquote><p>are atomic on the level of a single document.</p><p>embedding the available field and the checkout field within the same document ensures that you can update the two fields atomically.</p><p><a href="https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity</a></p><p><a href="https://docs.mongodb.com/manual/core/capped-collections/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/capped-collections/</a></p><p><a href="https://stackoverflow.com/questions/2811299/mongodb-index-ram-relationship?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa" target="_blank" rel="noopener">https://stackoverflow.com/questions/2811299/mongodb-index-ram-relationship?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa</a></p><p><a href="http://jasonwilder.com/blog/2012/02/08/optimizing-mongodb-indexes/" target="_blank" rel="noopener">http://jasonwilder.com/blog/2012/02/08/optimizing-mongodb-indexes/</a></p><p><a href="https://docs.mongodb.com/manual/tutorial/ensure-indexes-fit-ram/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/tutorial/ensure-indexes-fit-ram/</a></p><ul><li>index</li><li>capped collections: update &amp; index &amp; avoid scan; </li><li>use reference to reduce space usage</li></ul><hr><h1 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h1><ul><li>Manipulation: query, aggregate</li><li>command line</li><li>mongoengine</li></ul><p><strong>find + forEach</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.clothes.find( &#123; $and : [ &#123; price: &#123; $exists: true &#125; &#125;, &#123; price: &#123; $type: &quot;string&quot; &#125; &#125; ] &#125; ).forEach( function( doc ) &#123;</span><br><span class="line">  doc.priceDec = NumberDecimal( doc.price );</span><br><span class="line">  db.clothes.save( doc );</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p><p><strong>group + push all document to an array</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.event.aggregate([    &#123;<span class="attr">$group</span>:&#123;<span class="attr">_id</span>: <span class="string">'$event_name'</span>, <span class="attr">events</span>:&#123;<span class="attr">$push</span>: <span class="string">'$$CURRENT'</span>&#125;&#125;&#125;    ])</span><br><span class="line">or</span><br><span class="line">db.event.aggregate([    &#123;<span class="attr">$group</span>:&#123;<span class="attr">_id</span>: <span class="string">'$event_name'</span>, <span class="attr">events</span>:&#123;<span class="attr">$push</span>: <span class="string">'$$ROOT'</span>&#125;&#125;&#125;    ])</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"Node Update Avg Time"</span>,</span><br><span class="line">        <span class="attr">"events"</span> : [</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="attr">"_id"</span> : ObjectId(<span class="string">"5af011a0684220858c1f3839"</span>),</span><br><span class="line">                        <span class="attr">"tags"</span> : &#123;</span><br><span class="line"></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">"event_name"</span> : <span class="string">"Node Update Avg Time"</span>,</span><br><span class="line">                        <span class="attr">"endpoint"</span> : <span class="string">"resourcemanager02-bdyf.qiyi.hadoop"</span>,</span><br><span class="line">                        <span class="attr">"start_at"</span> : NumberLong(<span class="string">"1525682592206"</span>),</span><br><span class="line">                        <span class="attr">"status"</span> : <span class="string">"problem"</span>,</span><br><span class="line">                        <span class="attr">"value"</span> : <span class="string">"not yet supported"</span>,</span><br><span class="line">                        <span class="attr">"message"</span> : <span class="string">"resourcemanager02-bdyf.qiyi.hadoop\\n10.19.56.154\\nService Output:80.25\\nDate/Time: Mon May 7 16:43:12 CST 2018\\nComment: \\n"</span>,</span><br><span class="line">                        <span class="attr">"badges"</span> : &#123;</span><br><span class="line">                                <span class="attr">"source"</span> : <span class="string">"nagios"</span>,</span><br><span class="line">                                <span class="attr">"cluster"</span> : <span class="string">"BD"</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">"tasks"</span> : [ ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="attr">"_id"</span> : ObjectId(<span class="string">"5af018a7684220858c1f3845"</span>),</span><br><span class="line">                        <span class="attr">"tags"</span> : &#123;</span><br><span class="line"></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">"event_name"</span> : <span class="string">"Node Update Avg Time"</span>,</span><br><span class="line">                        <span class="attr">"endpoint"</span> : <span class="string">"resourcemanager02-bdyf.qiyi.hadoop"</span>,</span><br><span class="line">                        <span class="attr">"start_at"</span> : NumberLong(<span class="string">"1525684391608"</span>),</span><br><span class="line">                        <span class="attr">"status"</span> : <span class="string">"ok"</span>,</span><br><span class="line">                        <span class="attr">"value"</span> : <span class="string">"not yet supported"</span>,</span><br><span class="line">                        <span class="attr">"message"</span> : <span class="string">"resourcemanager02-bdyf.qiyi.hadoop\\n10.19.56.154\\nService Output:0.97\\nDate/Time: Mon May 7 17:13:11 CST 2018\\nComment: \\n"</span>,</span><br><span class="line">                        <span class="attr">"badges"</span> : &#123;</span><br><span class="line">                                <span class="attr">"source"</span> : <span class="string">"nagios"</span>,</span><br><span class="line">                                <span class="attr">"cluster"</span> : <span class="string">"BD"</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">"tasks"</span> : [ ]</span><br><span class="line">                &#125;</span><br><span class="line">        ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><h1 id="Temporary-note"><a href="#Temporary-note" class="headerlink" title="Temporary note"></a>Temporary note</h1><p>join &amp; avoid join   <a href="https://docs.mongodb.com/manual/reference/database-references/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/database-references/</a></p><hr><hr><p>title: Mongo Note</p><h2 id="categories"><a href="#categories" class="headerlink" title="categories: []"></a>categories: []</h2><p>Notice</p><ol><li>provide both json and mongoengine example</li><li>data model and design pattern</li><li>index</li><li>lock &amp; atomic operation</li><li>query over reference, across collections?</li><li>sharded?</li></ol><p><a href="https://docs.mongodb.com/manual/data-modeling/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/data-modeling/</a></p><p><a href="https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity" target="_blank" rel="noopener">Operational Factors and Data Models</a></p><h1 id="Document-Relationship"><a href="#Document-Relationship" class="headerlink" title="Document Relationship"></a>Document Relationship</h1><ul><li>embeded document: improve retrive performance</li><li>document reference: reduce repeatition of document</li></ul><p>one2one<br>one2many<br>many2many</p><p>join query?</p><h2 id="One-to-One"><a href="#One-to-One" class="headerlink" title="One to One"></a>One to One</h2><h2 id="Model-Tree-Structures"><a href="#Model-Tree-Structures" class="headerlink" title="Model Tree Structures"></a>Model Tree Structures</h2><p><a href="https://docs.mongodb.com/manual/applications/data-models/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/applications/data-models/</a></p><p><a href="https://docs.mongodb.com/manual/tutorial/model-tree-structures-with-child-references/" target="_blank" rel="noopener">create index on array field</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.categories.createIndex( &#123; children: 1 &#125; )</span><br></pre></td></tr></table></figure></p><h2 id="join-amp-avoid-join"><a href="#join-amp-avoid-join" class="headerlink" title="join &amp; avoid join"></a>join &amp; avoid join</h2><p><a href="https://docs.mongodb.com/manual/reference/database-references/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/database-references/</a></p><hr><p>其他临时的记录</p><h1 id="Overview-Limit"><a href="#Overview-Limit" class="headerlink" title="Overview/Limit"></a>Overview/Limit</h1><blockquote><p><a href="https://docs.mongodb.com/manual/reference/limits/#mongodb-limits-and-thresholds" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/limits/#mongodb-limits-and-thresholds</a></p></blockquote><ul><li>storage capacity of a single mongodb and sharding mongodb</li><li>max capacity of a single doc, collection and db</li><li>read &amp; write performance: latency, throughput</li><li>usage scenario</li></ul><blockquote><p><a href="https://www.mongodb.com/blog/post/thinking-documents-part-1?jmp=docs&amp;_ga=2.238184258.318970262.1525591177-1340608169.1525101104" target="_blank" rel="noopener">how to join in mongodb</a><br>reference, embedded</p></blockquote><table><thead><tr><th>RDBMS</th><th>MongoDB</th></tr></thead><tbody><tr><td>Database</td><td>Database</td></tr><tr><td>Table</td><td>Collection</td></tr><tr><td>Row</td><td>Document</td></tr><tr><td>Index</td><td>Index</td></tr><tr><td>JOIN</td><td>Embedded Document or Reference</td></tr></tbody></table><hr><h1 id="Data-model-and-pattern"><a href="#Data-model-and-pattern" class="headerlink" title="Data model and pattern"></a>Data model and pattern</h1><blockquote><p><a href="https://docs.mongodb.com/manual/core/data-model-operations/" target="_blank" rel="noopener">Operational Factors and Data Models</a></p></blockquote><ul><li>document structure: references &amp; embedded document</li><li>write operations are atomic at the document level</li><li>document growth, <a href="https://docs.mongodb.com/manual/core/data-model-operations/#data-model-document-growth" target="_blank" rel="noopener">MMAPv1</a></li><li>data use and performance: <a href="https://docs.mongodb.com/manual/core/capped-collections/" target="_blank" rel="noopener">Capped Collections</a>, use index for frequent read operation</li></ul><h3 id="Operational-Factors-and-Data-Models"><a href="#Operational-Factors-and-Data-Models" class="headerlink" title="Operational Factors and Data Models"></a>Operational Factors and Data Models</h3><ul><li>Document Growth</li><li>Atomicity</li><li>Sharding</li><li>Indexes</li><li>Large Number of Collections</li><li>Collection Contains Large Number of Small Documents</li><li>Storage Optimization for Small Documents</li><li>Data Lifecycle Management</li></ul><h1 id="Design-model-pattern"><a href="#Design-model-pattern" class="headerlink" title="Design model, pattern"></a>Design model, pattern</h1><p><a href="https://docs.mongodb.com/manual/data-modeling/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/data-modeling/</a></p><p><a href="https://docs.mongodb.com/manual/core/data-model-design/#data-modeling-embedding" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/data-model-design/#data-modeling-embedding</a></p><h1 id="Index-1"><a href="#Index-1" class="headerlink" title="Index"></a>Index</h1><p><a href="https://docs.mongodb.com/manual/indexes/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/indexes/</a></p><p>what is index in mongo? index for different field type: array?</p><p>how to create index?</p><p>index overhead, performance penalization ?</p><p>mongo index is implemented based on B tree, thus, it’s ordered</p><p>[interview] b+,b-,lsm comparison</p><h1 id="Shard-1"><a href="#Shard-1" class="headerlink" title="Shard"></a>Shard</h1><p><a href="https://docs.mongodb.com/manual/reference/glossary/#term-chunk" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/glossary/#term-chunk</a></p><p><a href="https://docs.mongodb.com/manual/sharding/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/sharding/</a></p><p><a href="https://docs.mongodb.com/manual/core/sharding-shard-key/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/sharding-shard-key/</a></p><p>shard architecture?</p><p>chunks (default to 64MB) —&gt; shard </p><p>index and shard key</p><p>how to route data based on the shard key?</p><p>load balance and migration based on chunk</p><h1 id="Atomic-operation-1"><a href="#Atomic-operation-1" class="headerlink" title="Atomic operation"></a>Atomic operation</h1><blockquote><p><a href="https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity</a></p></blockquote><p>are atomic on the level of a single document.</p><p>embedding the available field and the checkout field within the same document ensures that you can update the two fields atomically.</p><h1 id="Performance-1"><a href="#Performance-1" class="headerlink" title="Performance"></a>Performance</h1><p><a href="https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/data-model-operations/#data-model-atomicity</a></p><p><a href="https://docs.mongodb.com/manual/core/capped-collections/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/core/capped-collections/</a></p><p><a href="https://stackoverflow.com/questions/2811299/mongodb-index-ram-relationship?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa" target="_blank" rel="noopener">https://stackoverflow.com/questions/2811299/mongodb-index-ram-relationship?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa</a></p><p><a href="http://jasonwilder.com/blog/2012/02/08/optimizing-mongodb-indexes/" target="_blank" rel="noopener">http://jasonwilder.com/blog/2012/02/08/optimizing-mongodb-indexes/</a></p><p><a href="https://docs.mongodb.com/manual/tutorial/ensure-indexes-fit-ram/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/tutorial/ensure-indexes-fit-ram/</a></p><ul><li>index</li><li>capped collections: update &amp; index &amp; avoid scan; </li><li>use reference to reduce space usage</li></ul><hr><h1 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h1><p><strong>find + forEach</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.clothes.find( &#123; $and : [ &#123; price: &#123; $exists: true &#125; &#125;, &#123; price: &#123; $type: &quot;string&quot; &#125; &#125; ] &#125; ).forEach( function( doc ) &#123;</span><br><span class="line">  doc.priceDec = NumberDecimal( doc.price );</span><br><span class="line">  db.clothes.save( doc );</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> ojr </category>
          
          <category> test </category>
          
          <category> category </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
